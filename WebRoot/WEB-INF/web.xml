<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://java.sun.com/xml/ns/javaee" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
id="WebApp_ID" version="2.5">
 <display-name>struts2_day01</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
    <!-- 使用spring解决hibernate因session关闭导致的延迟加载例外问题(必须配置到Struts2前面) --> 
  <filter>  
           <filter-name>OpenSessionInViewFilter</filter-name>  
           <filter-class>  
               org.springframework.orm.hibernate3.support.OpenSessionInViewFilter  
           </filter-class> 
            <!-- 指定org.springframework.orm.hibernate3.LocalSessionFactoryBean在spring配置文件中的名称,
            	默认值为sessionFactory.如果LocalSessionFactoryBean在spring中的名称不是sessionFactory,
            	该参数一定要指定,否则会出现找不到sessionFactory的例外 -->   
           <init-param>  
               <param-name>sessionFactoryBeanName</param-name>  
               <param-value>sessionFactory</param-value>  
           </init-param>  
       </filter>  
         
       <filter-mapping>  
           <filter-name>OpenSessionInViewFilter</filter-name>  
           <url-pattern> /*</url-pattern>  
       </filter-mapping>  
  <!-- 配置Struts2的核心过滤器：前端控制器 -->
 <filter>
  	<filter-name>struts2</filter-name>
  	<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  	
  </filter>
  
  <filter-mapping>                                     
  	<filter-name>struts2</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping> 
  <!-- <filter>
	        <filter-name>OpenSessionInViewFilter</filter-name>
	        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
	        <filter-name>OpenSessionInViewFilter</filter-name>
	        <url-pattern>/*</url-pattern>
	</filter-mapping> -->
	    
   <!-- spring配置文件位置 -->
   <!-- 
        指定spring的配置文件，默认从web根目录寻找配置文件，
        我们可以通过spring提供的classpath:前缀指定从类路径下寻找 
    -->  
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext.xml</param-value>
  </context-param>	
  <!-- spring核心监听器 -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  
  </listener>

  
</web-app>